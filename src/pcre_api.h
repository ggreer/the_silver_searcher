/******************************************************************************
 * Copyright (c) 2016 Allen Wild <allenwild93@gmail.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/

#ifndef __PCRE_API_H__
#define __PCRE_API_H__

#include "config.h"

#ifdef HAVE_PCRE2
#include <pcre2.h>
#define AG_PCRE_DEFINE_PREFIX PCRE2_
#else
#include <pcre.h>
#define AG_PCRE_DEFINE_PREFIX PCRE_
#endif // HAVE_PCRE2

// Common macros so that AG_PCRE_* will automatically expand to either
// PCRE_* or PCRE2_*
// The macros below are taken from pcre2.h
#define AG_PCRE_JOIN(a, b) a##b
#define AG_PCRE_GLUE(a, b) AG_PCRE_JOIN(a, b)
#define AG_PCRE_PREFIX(a) AG_PCRE_GLUE(AG_PCRE_DEFINE_PREFIX, a)

// This list is auto-generated by contrib/collect_defines.py and consists of
// "common" symbols between PCRE and PCRE2. These should expand to macros to
// avoid issues with the underlying values being different
#define AG_PCRE_ANCHORED AG_PCRE_PREFIX(ANCHORED)
#define AG_PCRE_AUTO_CALLOUT AG_PCRE_PREFIX(AUTO_CALLOUT)
#define AG_PCRE_CASELESS AG_PCRE_PREFIX(CASELESS)
#define AG_PCRE_DFA_RESTART AG_PCRE_PREFIX(DFA_RESTART)
#define AG_PCRE_DFA_SHORTEST AG_PCRE_PREFIX(DFA_SHORTEST)
#define AG_PCRE_DOLLAR_ENDONLY AG_PCRE_PREFIX(DOLLAR_ENDONLY)
#define AG_PCRE_DOTALL AG_PCRE_PREFIX(DOTALL)
#define AG_PCRE_DUPNAMES AG_PCRE_PREFIX(DUPNAMES)
#define AG_PCRE_EXTENDED AG_PCRE_PREFIX(EXTENDED)
#define AG_PCRE_FIRSTLINE AG_PCRE_PREFIX(FIRSTLINE)
#define AG_PCRE_MULTILINE AG_PCRE_PREFIX(MULTILINE)
#define AG_PCRE_NEVER_UTF AG_PCRE_PREFIX(NEVER_UTF)
#define AG_PCRE_NOTBOL AG_PCRE_PREFIX(NOTBOL)
#define AG_PCRE_NOTEMPTY AG_PCRE_PREFIX(NOTEMPTY)
#define AG_PCRE_NOTEMPTY_ATSTART AG_PCRE_PREFIX(NOTEMPTY_ATSTART)
#define AG_PCRE_NOTEOL AG_PCRE_PREFIX(NOTEOL)
#define AG_PCRE_NO_AUTO_CAPTURE AG_PCRE_PREFIX(NO_AUTO_CAPTURE)
#define AG_PCRE_NO_AUTO_POSSESS AG_PCRE_PREFIX(NO_AUTO_POSSESS)
#define AG_PCRE_NO_START_OPTIMIZE AG_PCRE_PREFIX(NO_START_OPTIMIZE)
#define AG_PCRE_PARTIAL_HARD AG_PCRE_PREFIX(PARTIAL_HARD)
#define AG_PCRE_PARTIAL_SOFT AG_PCRE_PREFIX(PARTIAL_SOFT)
#define AG_PCRE_UCP AG_PCRE_PREFIX(UCP)
#define AG_PCRE_UNGREEDY AG_PCRE_PREFIX(UNGREEDY)
#define AG_PCRE_INFO_BACKREFMAX AG_PCRE_PREFIX(INFO_BACKREFMAX)
#define AG_PCRE_INFO_CAPTURECOUNT AG_PCRE_PREFIX(INFO_CAPTURECOUNT)
#define AG_PCRE_INFO_HASCRORLF AG_PCRE_PREFIX(INFO_HASCRORLF)
#define AG_PCRE_INFO_JCHANGED AG_PCRE_PREFIX(INFO_JCHANGED)
#define AG_PCRE_INFO_JITSIZE AG_PCRE_PREFIX(INFO_JITSIZE)
#define AG_PCRE_INFO_MATCHLIMIT AG_PCRE_PREFIX(INFO_MATCHLIMIT)
#define AG_PCRE_INFO_MAXLOOKBEHIND AG_PCRE_PREFIX(INFO_MAXLOOKBEHIND)
#define AG_PCRE_INFO_MINLENGTH AG_PCRE_PREFIX(INFO_MINLENGTH)
#define AG_PCRE_INFO_NAMECOUNT AG_PCRE_PREFIX(INFO_NAMECOUNT)
#define AG_PCRE_INFO_NAMEENTRYSIZE AG_PCRE_PREFIX(INFO_NAMEENTRYSIZE)
#define AG_PCRE_INFO_NAMETABLE AG_PCRE_PREFIX(INFO_NAMETABLE)
#define AG_PCRE_INFO_RECURSIONLIMIT AG_PCRE_PREFIX(INFO_RECURSIONLIMIT)
#define AG_PCRE_INFO_SIZE AG_PCRE_PREFIX(INFO_SIZE)
#define AG_PCRE_CONFIG_BSR AG_PCRE_PREFIX(CONFIG_BSR)
#define AG_PCRE_CONFIG_JIT AG_PCRE_PREFIX(CONFIG_JIT)
#define AG_PCRE_CONFIG_JITTARGET AG_PCRE_PREFIX(CONFIG_JITTARGET)
#define AG_PCRE_CONFIG_NEWLINE AG_PCRE_PREFIX(CONFIG_NEWLINE)
#define AG_PCRE_CONFIG_STACKRECURSE AG_PCRE_PREFIX(CONFIG_STACKRECURSE)

// Stringification Macros
#define AG_STRINGIFY(s) AG_STRINGIFY_(s)
#define AG_STRINGIFY_(s) #s

/******************************************************************************
 * TYPES
 ******************************************************************************/
#ifdef HAVE_PCRE2
// For pcre2
typedef pcre2_code ag_pcre_re_t;
typedef pcre2_match_context ag_pcre_extra_t;
#else
// For leagacy pcre
typedef pcre ag_pcre_re_t;
typedef pcre_extra ag_pcre_extra_t;
#endif

/******************************************************************************
 * FUNCTIONS
 ******************************************************************************/
// Function macros - for where the usage of pcre_*() and pcre2_*() are interchangeable
// (perhaps with the help of other AG_PCRE defines
#ifdef HAVE_PCRE2
// For pcre2
#define ag_pcre_config pcre2_config
#else
// For legacy pcre
#define ag_pcre_config pcre_config
#endif

// Functions which need to be wrapped in more than name
const char *ag_pcre_version(void);
void ag_pcre_free_re(ag_pcre_re_t **re);
void ag_pcre_free_extra(ag_pcre_extra_t **pextra);
void ag_pcre_compile(ag_pcre_re_t **re, ag_pcre_extra_t **re_extra, char *q,
                     const int pcre_opts, int use_jit);
int ag_pcre_match(ag_pcre_re_t *re, ag_pcre_extra_t *extra, const char *buf, int length,
                  int offset, int options, int *ovector, int ovecsize);

#endif // __PCRE_API_H__
